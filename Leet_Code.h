/*
 * Leet_Code.h
 *
 *  Created on: 2016年12月7日
 *      Author: zhangyalei
 */

#ifndef LEET_CODE_H_
#define LEET_CODE_H_

#include <string>
#include <vector>
#include <iostream>

using namespace std;

/*104. Maximum Depth of Binary Tree
	Given a binary tree, find its maximum depth.
	The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
*/
struct TreeNode {
	int val;
	TreeNode *left;
	TreeNode *right;
	TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
int maxDepth(TreeNode* root);

/*136. Single Number
	Given an array of integers, every element appears twice except for one. Find that single one.
	Note:
	Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?
*/
int singleNumber(vector<int>& nums);

/*231. Power of Two
	Given an integer, write a function to determine if it is a power of two.
*/
bool isPowerOfTwo(int n);

/*326. Power of Three
	Given an integer, write a function to determine if it is a power of three.
Follow up: Could you solve it without loops/recursion?
*/
bool isPowerOfThree(int n);

/*342. Power of Four
	Given an integer (signed 32 bits), write a function to check whether it is a power of 4.
Example:
	Given num = 16, return true. Given num = 5, return false.
Follow up: Could you solve it without loops/recursion?
*/
bool isPowerOfFour(int num);

/*258. Add Digits
	Given a non-negative integer num, repeatedly add all its digits until the result has only one digit.
	For example:
	Given num = 38, the process is like: 3 + 8 = 11, 1 + 1 = 2. Since 2 has only one digit, return it.
	Follow up:
	Could you do it without any loop/recursion in O(1) runtime?
*/
int addDigits(int num);

/*338. Counting Bits
	Given a non negative integer number num.
	For every numbers i in the range 0 ≤ i ≤ num calculate the number
	of 1's in their binary representation and return them as an array.
*/
vector<int> countBits(int num);

/*344. Reverse String
	Write a function that takes a string as input and returns the string reversed.
*/
string reverseString(string s);

/*371. Sum of Two Integers
	Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -
*/
int getSum(int a, int b);

/*389. Find the Difference
	Given two strings s and t which consist of only lowercase letters.
	String t is generated by random shuffling string s and then add one more letter at a random position.
	Find the letter that was added in t.
*/
char findTheDifference(string s, string t);

/*412. Fizz Buzz
	Write a program that outputs the string representation of numbers from 1 to n.
	But for multiples of three it should output “Fizz” instead of the number and
	for the multiples of five output “Buzz”.
	For numbers which are multiples of both three and five output “FizzBuzz”.
*/
vector<string> fizzBuzz(int n);

/*448. Find All Numbers Disappeared in an Array
	Given an array of integers where 1 ≤ a[i] ≤ n (n = size of array), some elements appear twice and others appear once.
	Find all the elements of [1, n] inclusive that do not appear in this array.
	Could you do it without extra space and in O(n) runtime? You may assume the returned list does not count as extra space.
Example:
	Input:
	[4,3,2,7,8,2,3,1]
	Output:
	[5,6]
*/
vector<int> findDisappearedNumbers(vector<int>& nums);

/*461. Hamming Distance
	The Hamming distance between two integers is the number of positions at which the corresponding bits are different.
	Given two integers x and y, calculate the Hamming distance.
*/
int hammingDistance(int x, int y);

/*463. Island Perimeter
	You are given a map in form of a two-dimensional integer grid where 1 represents land and 0
	represents water. Grid cells are connected horizontally/vertically (not diagonally).
	The grid is completely surrounded by water, and there is exactly one island
	(i.e., one or more connected land cells). The island doesn't have "lakes"
	(water inside that isn't connected to the water around the island).
	One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.
Example:
	[[0,1,0,0],
	 [1,1,1,0],
 	 [0,1,0,0],
 	 [1,1,0,0]]
Answer: 16
*/
int islandPerimeter(vector<vector<int>>& grid);

#endif /* LEET_CODE_H_ */
